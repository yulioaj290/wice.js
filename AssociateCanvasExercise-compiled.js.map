{"version":3,"sources":["AssociateCanvasExercise.js"],"names":[],"mappings":"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","file":"AssociateCanvasExercise-compiled.js","sourcesContent":["/**\n * Project: wice.js.\n * Author: Yulio Aleman Jimenez [@yulioaj290]\n * Date: 22/09/18\n * Created by WebStorm\n */\n\n\n/**\n * AssociateCanvasExercise extends from CanvasExercise superclass.\n * Define the associate object exercises\n */\nclass AssociateCanvasExercise extends CanvasExercise {\n\n    /**\n     * Constructor of the AssociateCanvasExercise class.\n     * @param canvasElementId\n     * @param canvasWidth\n     * @param imageSrc\n     * @param lineWidth\n     * @param lineColor\n     * @param lineHead\n     * @param fontFamily\n     * @param fontSize\n     * @param fontColor\n     * @param fontStyle\n     * @param fontAlign\n     * @param fontBaseline\n     * @param mark\n     * @param orderType\n     * @param listObjectsCoords\n     * @param listObjectsConnections\n     * @param strokeRectObject\n     */\n    constructor(canvasElementId, canvasWidth = '', imageSrc = '',\n                lineWidth = '2', lineColor = '#000000', lineHead = false, fontFamily = 'Arial',\n                fontSize = '20', fontColor = '#000000', fontStyle = 'regular', fontAlign = 'center',\n                fontBaseline = 'middle', mark = 'X', orderType = ORDER_TYPE_NUM,\n                // Below are specific class parameters\n                listObjectsCoords = [], listObjectsConnections = [], strokeRectObject = true,) {\n\n        super(canvasElementId, canvasWidth, imageSrc, lineWidth, lineColor, lineHead, fontFamily,\n            fontSize, fontColor, fontStyle, fontAlign, fontBaseline, mark, orderType);\n\n        // own properties of the class\n        this._listObjectsCoords = listObjectsCoords;    // array of objects coordinates in the image\n        this._listObjectsConnections = listObjectsConnections;    // array of objects connections in the image\n        this._listObjectsAssociated = [];               // array to store the array of objects coordinates associated by user\n        this._strokeRectObject = strokeRectObject;      // define if object will be put into a rectangle\n        this._beginClickCoord = [];                     // store the coordinates of the 1st click event in format [x,y]\n        this._numberAssociationsConnected = 0;\n\n        // binding click event to canvas element to allow the associate object exercise execution\n        this._canvasElement.addEventListener(\"click\", this.clickAction.bind(this), false);\n    }\n\n    /**\n     * Perform an associate action using a line between objects based on two click event over canvas element.\n     * This function uses the coordinates of the objects inside canvas element and the coordinates of the click event.\n     * @param event\n     * @returns {*}\n     */\n    clickAction(event) {\n\n        // Obtain mouse click position\n        let current_x = event.pageX - event.currentTarget.offsetLeft,\n            current_y = event.pageY - event.currentTarget.offsetTop;\n        // alert(`cursorX: ${cur_x}, cursorY: ${cur_y}`);\n\n        if (this._canvasElement.getContext) {\n            // getting 2d context from canvas element\n            let ctx = this._canvasElement.getContext(\"2d\");\n\n            // asking if there is Associations to be perform\n            if (this._numberAssociationsConnected < this._getNumberOfConnections()) {\n\n                // asking if it's the 1st click event\n                if (this._beginClickCoord.length === 0) {\n                    // Storing the 1st click event coordinates\n                    this._beginClickCoord = [current_x, current_y];\n                } else {\n\n                    // getting coordinates of real objects, begin & end objects\n                    let beginObject = this._findObjectThroughCoords(this._beginClickCoord),\n                        endObject = this._findObjectThroughCoords([current_x, current_y]),\n                        connection = this._findConnection(beginObject, endObject);\n\n                    if (!!beginObject && !!endObject) {\n                        if (connection === 1) {\n                            this._listObjectsAssociated.push([beginObject, endObject]);\n                        } else if (connection === 0) {\n                            this._listObjectsAssociated.push([endObject, beginObject]);\n                        }\n                    }\n\n                    ctx.lineWidth = this._lineWidth;\n                    ctx.strokeStyle = this._lineColor;\n                    ctx.beginPath();\n                    ctx.moveTo(this._beginClickCoord[0], this._beginClickCoord[1]);\n                    ctx.lineTo(current_x, current_y);\n                    ctx.stroke();\n\n                    this._numberAssociationsConnected++;\n\n                    // Resetting begin click coordinates\n                    this._beginClickCoord = [];\n                }\n\n                return this.getListObjectsAssociated();\n            }\n        }\n    }\n\n    _findConnection(beginObject, endObject) {\n        if (this._findEndCoordsInConnections(endObject, this._findBeginCoordsInConnections(beginObject))) {\n            return 1;\n        } else if (this._findEndCoordsInConnections(beginObject, this._findBeginCoordsInConnections(endObject))) {\n            return 0;\n        } else {\n            return -1;\n        }\n    }\n\n    _findBeginCoordsInConnections(beginObject) {\n        // looping the list of objects coordinates\n        for (let i = 0; i < this._listObjectsCoords.length; i++) {\n\n            let value1 = JSON.stringify(this._listObjectsCoords[i]),\n                value2 = JSON.stringify(beginObject);\n\n            // looking for the index of the begin object\n            if (value1 === value2) {\n                return i;\n            }\n        }\n    }\n\n    _findEndCoordsInConnections(endObject, index) {\n        // looping the list of objects connections coordinates\n        for (let i = 0; i < this._listObjectsConnections[index].length; i++) {\n\n            let value1 = JSON.stringify(this._listObjectsConnections[index][i]),\n                value2 = JSON.stringify(endObject);\n\n            // looking for the index of the begin object\n            if (value1 === value2) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _findObjectThroughCoords(coords) {\n\n        // declaring variables\n        let x, y, x1, y1;\n\n        // looping the list of objects coordinates\n        for (let i = 0; i < this._listObjectsCoords.length; i++) {\n\n            // Coordinates of the images\n            // The canvas divisor allow to calc the exact position of every coordinate,\n            // even if the canvas element is positioned anywhere inside the web page\n            x = Math.round(this._listObjectsCoords[i][0] / this._canvasDivisor);\n            y = Math.round(this._listObjectsCoords[i][1] / this._canvasDivisor);\n            x1 = Math.round(this._listObjectsCoords[i][2] / this._canvasDivisor);\n            y1 = Math.round(this._listObjectsCoords[i][3] / this._canvasDivisor);\n\n            // asking if a valid object was clicked, based on coordinates of objects and click event\n            if ((x <= coords[0] && coords[0] <= x1)\n                && (y <= coords[1] && coords[1] <= y1)) {\n\n                return this._listObjectsCoords[i];\n            }\n        }\n\n        return false;\n    }\n\n    _getNumberOfConnections() {\n        let counter = 0;\n        for (let i = 0; i < this._listObjectsConnections.length; i++) {\n            counter += this._listObjectsConnections[i].length;\n        }\n        return counter;\n    }\n\n    /**\n     * Return and print in JS console the array of the list of associated objects\n     * @returns {Array}\n     */\n    getListObjectsAssociated() {\n        console.log(JSON.stringify(this._listObjectsAssociated));\n        return this._listObjectsAssociated;\n    }\n}\n\nAssociateCanvasExercise.exports = AssociateCanvasExercise;\n\n\n// Live execution of code\nlet coords = [[80, 35, 375, 283], [395, 120, 715, 370], [36, 352, 88, 404], [520, 20, 590, 76]],\n    connections = [[[36, 352, 88, 404], [520, 20, 590, 76]], [[36, 352, 88, 404]], [[395, 120, 715, 370], [520, 20, 590, 76]], [[80, 35, 375, 283], [395, 120, 715, 370]]];\n\nconst ex = new AssociateCanvasExercise('myCanvas');\nex._listObjectsCoords = coords;\nex._listObjectsConnections = connections;\nex._canvasWidth = 700;\nex._imageSrc = 'plasma-desktop.jpg';\nex.initializeCanvas();\n\nlet marks = [];\n\nfor (let i = 0; i < ex._getNumberOfConnections(); i++) {\n    marks[i] = \" | \";\n}\n\ndocument.getElementById(\"options\").innerText = JSON.stringify(marks);\n\nex._canvasElement.addEventListener(\"click\", function () {\n    if (ex._beginClickCoord.length === 0) {\n        marks.shift();\n        document.getElementById(\"options\").innerText = JSON.stringify(marks);\n        document.getElementById(\"result\").innerText = JSON.stringify(ex.getListObjectsAssociated());\n    }\n}, false);\n\nconsole.log(ex);"]}