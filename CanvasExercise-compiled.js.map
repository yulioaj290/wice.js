{"version":3,"sources":["CanvasExercise.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;;AAOA;AACA,IAAM,mBAAmB,CAAzB;AAAA,IACI,iBAAiB,CADrB;AAEA;;;;IAGM,c;;AAEF;;;;;;;;;;;;;;;;;AAiBA,4BAAY,eAAZ,EAG6E;AAAA,YAHhD,WAGgD,uEAHlC,EAGkC;AAAA,YAH9B,QAG8B,uEAHnB,EAGmB;AAAA,YAFjE,SAEiE,uEAFrD,GAEqD;AAAA,YAFhD,SAEgD,uEAFpC,SAEoC;AAAA,YAFzB,QAEyB,uEAFd,KAEc;AAAA,YAFP,UAEO,uEAFM,OAEN;AAAA,YADjE,QACiE,uEADtD,IACsD;AAAA,YADhD,SACgD,uEADpC,SACoC;AAAA,YADzB,SACyB,uEADb,SACa;AAAA,YADF,SACE,0EADU,QACV;AAAA,YAAjE,YAAiE,0EAAlD,QAAkD;AAAA,YAAxC,IAAwC,0EAAjC,GAAiC;AAAA,YAA5B,SAA4B,0EAAhB,cAAgB;;AAAA;;AAEzE,aAAK,gBAAL,GAAwB,eAAxB,CAFyE,CAE7B;AAC5C,aAAK,cAAL,GAAsB,SAAS,cAAT,CAAwB,KAAK,gBAA7B,CAAtB;AACA,aAAK,YAAL,GAAoB,WAApB;AACA,aAAK,cAAL,GAAsB,CAAtB;AACA,aAAK,SAAL,GAAiB,QAAjB;AACA,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,SAAL,GAAiB,QAAjB;AACA,aAAK,WAAL,GAAmB,UAAnB;AACA,aAAK,SAAL,GAAiB,QAAjB;AACA,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,UAAL,GAAkB,SAAlB;AACA,aAAK,aAAL,GAAqB,YAArB;AACA,aAAK,KAAL,GAAa,IAAb;AACA,aAAK,UAAL,GAAkB,SAAlB;AACH;;AAED;;;;;;;;;;AAgBA;;;;kCAIU;AACN,mBAAO,KAAK,KAAZ;AACH;;AAED;;;;;;;2CAImB;;AAEf,gBAAI,KAAK,cAAL,CAAoB,UAAxB,EAAoC;;AAEhC,oBAAI,MAAM,IAAI,KAAJ,EAAV,CAFgC,CAEJ;;AAE5B;AACA,oBAAI,gBAAJ,CAAqB,MAArB,EAA6B,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAA7B,EAA2D,KAA3D;;AAEA;AACA,oBAAI,GAAJ,GAAU,KAAK,SAAf;AACH;AACJ;;;oCAEW,K,EAAM,CAEjB;;;qCAEY,K,EAAO;;AAEhB;AACA,gBAAI,MAAM,MAAM,aAAhB;AAAA,gBACI,aAAa,IAAI,KADrB;AAAA,gBAEI,cAAc,IAAI,MAFtB;;AAGA;AACI,kBAAM,KAAK,cAAL,CAAoB,UAApB,CAA+B,IAA/B,CAJV;;AAMA;AACA,iBAAK,cAAL,GAAsB,aAAa,KAAK,YAAxC;;AAEA,gBAAI,aAAa,KAAK,KAAL,CAAW,aAAa,KAAK,cAA7B,CAAjB;AAAA,gBACI,cAAc,KAAK,KAAL,CAAW,cAAc,KAAK,cAA9B,CADlB;;AAGA;AACA,iBAAK,cAAL,CAAoB,YAApB,CAAiC,OAAjC,EAA0C,WAAW,QAAX,EAA1C;AACA,iBAAK,cAAL,CAAoB,YAApB,CAAiC,QAAjC,EAA2C,YAAY,QAAZ,EAA3C;;AAEA;AACA,gBAAI,SAAJ,CAAc,GAAd,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,UAAzB,EAAqC,WAArC,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,UAAxD,EAAoE,WAApE;AACH;;;4BA/D2B;AACxB,mBAAO,gBAAP;AACH;;AAED;;;;;;;4BAI0B;AACtB,mBAAO,cAAP;AACH;;;;;;AAwDL,eAAe,OAAf,GAAyB,cAAzB","file":"CanvasExercise-compiled.js","sourcesContent":["/**\n * Project: ICE.js.\n * Author: Yulio Aleman Jimenez [@yulioaj290]\n * Date: 8/28/18\n * Created by WebStorm\n */\n\n// Type of character for order exercises\nconst ORDER_TYPE_ALPHA = 0,\n    ORDER_TYPE_NUM = 1;\n/**\n * Superclass CanvasExercise define general properties and initialization functions for all kind of canvas exercises.\n */\nclass CanvasExercise {\n\n    /**\n     * Constructor of CanvasExercise class.\n     * @param canvasElementId\n     * @param canvasWidth\n     * @param imageSrc\n     * @param lineWidth\n     * @param lineColor\n     * @param lineHead\n     * @param fontFamily\n     * @param fontSize\n     * @param fontColor\n     * @param fontStyle\n     * @param fontAlign\n     * @param fontBaseline\n     * @param mark\n     * @param orderType\n     */\n    constructor(canvasElementId, canvasWidth = '', imageSrc = '',\n                lineWidth = '2', lineColor = '#000000', lineHead = false, fontFamily = 'Arial',\n                fontSize = '20', fontColor = '#000000', fontStyle = 'regular', fontAlign = 'center',\n                fontBaseline = 'middle', mark = 'X', orderType = ORDER_TYPE_NUM) {\n\n        this._canvasElementId = canvasElementId;    // define the canvas HTML element to link with\n        this._canvasElement = document.getElementById(this._canvasElementId);\n        this._canvasWidth = canvasWidth;\n        this._canvasDivisor = 0;\n        this._imageSrc = imageSrc;\n        this._lineWidth = lineWidth;\n        this._lineColor = lineColor;\n        this._lineHead = lineHead;\n        this._fontFamily = fontFamily;\n        this._fontSize = fontSize;\n        this._fontColor = fontColor;\n        this._fontStyle = fontStyle;\n        this._fontAlign = fontAlign;\n        this._fontBaseline = fontBaseline;\n        this._mark = mark;\n        this._orderType = orderType;\n    }\n\n    /**\n     * Get constant value for alphabetic ordering objects.\n     * @returns {number}\n     */\n    static get orderTypeAlpha() {\n        return ORDER_TYPE_ALPHA;\n    }\n\n    /**\n     * Get constant value for numeric ordering objects.\n     * @returns {number}\n     */\n    static get orderTypeNum() {\n        return ORDER_TYPE_NUM;\n    }\n\n    /**\n     * Get mark used to Position Object over canvas image\n     * @returns {string|*}\n     */\n    getMark() {\n        return this._mark;\n    }\n\n    /**\n     * Initialize canvas element and load the image.\n     * @private\n     */\n    initializeCanvas() {\n\n        if (this._canvasElement.getContext) {\n\n            let img = new Image();      // Create new img element\n\n            // binding function to load image, to the load event\n            img.addEventListener(\"load\", this._onLoadImage.bind(this), false);\n\n            // Set source path of image\n            img.src = this._imageSrc;\n        }\n    }\n\n    clickAction(event){\n        \n    }\n\n    _onLoadImage(event) {\n\n        // getting image object, with and height\n        let img = event.currentTarget,\n            imageWidth = img.width,\n            imageHeight = img.height,\n        // getting 2d context from canvas element\n            ctx = this._canvasElement.getContext(\"2d\");\n\n        // setting canvas divisor to use when width and/or display resolution changes\n        this._canvasDivisor = imageWidth / this._canvasWidth;\n\n        let finalWidth = Math.round(imageWidth / this._canvasDivisor),\n            finalHeight = Math.round(imageHeight / this._canvasDivisor);\n\n        // setting canvas element dimensions\n        this._canvasElement.setAttribute('width', finalWidth.toString());\n        this._canvasElement.setAttribute('height', finalHeight.toString());\n\n        // drawing image\n        ctx.drawImage(img, 0, 0, imageWidth, imageHeight, 0, 0, finalWidth, finalHeight);\n    }\n}\n\nCanvasExercise.exports = CanvasExercise;\n\n"]}