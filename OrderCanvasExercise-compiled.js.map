{"version":3,"sources":["OrderCanvasExercise.js"],"names":[],"mappings":"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","file":"OrderCanvasExercise-compiled.js","sourcesContent":["/**\n * Project: ICE.js.\n * Author: Yulio Aleman Jimenez [@yulioaj290]\n * Date: 8/28/18\n * Created by WebStorm\n */\n\n/**\n * OrderCanvasExercise extends from CanvasExercise superclass.\n * Define the ordering object exercises\n */\nclass OrderCanvasExercise extends CanvasExercise {\n\n    /**\n     * Constructor of the OrderCanvasExercise class.\n     * @param canvasElementId\n     * @param canvasWidth\n     * @param imageSrc\n     * @param lineWidth\n     * @param lineColor\n     * @param lineHead\n     * @param fontFamily\n     * @param fontSize\n     * @param fontColor\n     * @param fontStyle\n     * @param fontAlign\n     * @param fontBaseline\n     * @param mark\n     * @param orderType\n     * @param listObjectsCoords\n     * @param strokeRectObject\n     */\n    constructor(canvasElementId, canvasWidth = '', imageSrc = '',\n                lineWidth = '2', lineColor = '#000000', lineHead = false, fontFamily = 'Arial',\n                fontSize = '20', fontColor = '#000000', fontStyle = 'regular', fontAlign = 'center',\n                fontBaseline = 'middle', mark = 'X', orderType = ORDER_TYPE_NUM,\n                // Below are specific class parameters\n                listObjectsCoords = [], strokeRectObject = true,) {\n\n        super(canvasElementId, canvasWidth, imageSrc, lineWidth, lineColor, lineHead, fontFamily,\n            fontSize, fontColor, fontStyle, fontAlign, fontBaseline, mark, orderType);\n\n        // own properties of the class\n        this._listObjectsCoords = listObjectsCoords;    // array of objects coordinates in the image\n        this._listObjectsOrdered = [];                  // array to store the array of objects coordinates arranged by user\n        this._lastOrderNumber = 0;                      // last order assigned\n        this._strokeRectObject = strokeRectObject;      // define if object will be put into a rectangle\n\n        // binding click event to canvas element to allow the order exercise execution\n        this._canvasElement.addEventListener(\"click\", this.clickAction.bind(this), false);\n    }\n\n    /**\n     * Assign an alphabetic/numerical order character to the object selected by click event over canvas element.\n     * This function uses the coordinates of the objects inside canvas element and the coordinates of the click event.\n     * @param event\n     * @returns {*}\n     */\n    clickAction(event) {\n        // Obtain mouse click position\n        let current_x = event.pageX - event.currentTarget.offsetLeft,\n            current_y = event.pageY - event.currentTarget.offsetTop;\n        // alert(`cursorX: ${cur_x}, cursorY: ${cur_y}`);\n\n        if (this._canvasElement.getContext) {\n            // getting 2d context from canvas element\n            let ctx = this._canvasElement.getContext(\"2d\");\n\n            // getting number of objects by list of object coordinates\n            let numberObjects = this._listObjectsCoords.length;\n\n            // asking if object clicked was ordered before\n            if (!this._isOrderedExercise(this._listObjectsOrdered, [current_x, current_y], this._canvasDivisor, this._lastOrderNumber, numberObjects)) {\n\n                // declaring variables\n                let x, y, x1, y1, cent_x, cent_y, order, tmp, op;\n\n                // looping the list of objects coordinates\n                for (let i = 0; i < this._listObjectsCoords.length; i++) {\n\n                    // Coordinates of the images\n                    // The canvas divisor allow to calc the exact position of every coordinate,\n                    // even if the canvas element is positioned anywhere inside the web page\n                    x = Math.round(this._listObjectsCoords[i][0] / this._canvasDivisor);\n                    y = Math.round(this._listObjectsCoords[i][1] / this._canvasDivisor);\n                    x1 = Math.round(this._listObjectsCoords[i][2] / this._canvasDivisor);\n                    y1 = Math.round(this._listObjectsCoords[i][3] / this._canvasDivisor);\n\n                    // init text properties\n                    ctx.font = `${this._fontStyle} ${this._fontSize}  ${this._fontFamily}`;\n                    ctx.fillStyle = this._fontColor;\n                    ctx.textAlign = this._fontAlign;\n                    ctx.textBaseline = this._fontBaseline;\n\n                    // alert(x + \" <= \" + cur_x + \" - \" + cur_x + \" <= \" + x1 + \" --- \" + y + \" <= \" + cur_y + \" - \" + cur_y + \" <= \" + y1);\n\n                    // loop control variable\n                    op = false;\n\n                    // asking if a valid object was clicked, based on coordinates of objects and click event\n                    if ((x <= current_x && current_x <= x1)\n                        && (y <= current_y && current_y <= y1)\n                        && (this._lastOrderNumber < numberObjects)) {\n\n                        // increment order number to assign\n                        this._lastOrderNumber++;\n\n                        // coordinates of the object center\n                        cent_x = Math.round(x1 - ((x1 - x) / 2));\n                        cent_y = Math.round(y1 - ((y1 - y) / 2));\n\n                        // write order number\n                        order = this._lastOrderNumber.toString();\n\n                        // asking what kind of order is being used\n                        if (this._orderType === CanvasExercise.orderTypeAlpha) {\n\n                            // if alphabetic order was selected, then calculate the letter order\n                            tmp = Math.floor(this._lastOrderNumber / 26);\n                            order = (tmp >= 1 ? String.fromCharCode(64 + (this._lastOrderNumber / 26)) : '')\n                                + String.fromCharCode(64 + (this._lastOrderNumber % 26));\n                        }\n\n                        // fill number or letter of the order\n                        ctx.fillText(order, cent_x, cent_y);\n\n                        // fill rectangle\n                        if (this._strokeRectObject) {\n                            ctx.lineWidth = this._lineWidth;\n                            ctx.strokeStyle = this._lineColor;\n                            ctx.strokeRect(x, y, x1 - x, y1 - y);\n                        }\n\n                        // update list of ordered objects\n                        this._listObjectsOrdered[this._listObjectsOrdered.length] = this._listObjectsCoords[i];\n\n                        op = true;\n                    }\n\n                    if (op) {\n                        break;\n                    }\n                }\n                return this.getListObjectsOrdered();\n            }\n        }\n    }\n\n    /**\n     * Determine if the element selected by click coordinates have been ordered before.\n     * @param objectsOrdered\n     * @param current_xy\n     * @param divisor\n     * @param lastOrderNumber\n     * @param numberObjects\n     * @returns {boolean} Return true if the element selected by click coordinates have been ordered before.\n     * @private\n     */\n    _isOrderedExercise(objectsOrdered, current_xy, divisor, lastOrderNumber, numberObjects) {\n\n        for (let i = 0; i < objectsOrdered.length; i++) {\n\n            // Coordinates of the images\n            let x = Math.round(objectsOrdered[i][0] / divisor),\n                y = Math.round(objectsOrdered[i][1] / divisor),\n                x1 = Math.round(objectsOrdered[i][2] / divisor),\n                y1 = Math.round(objectsOrdered[i][3] / divisor);\n\n            if ((x <= current_xy[0] && current_xy[0] <= x1)\n                && (y <= current_xy[1] && current_xy[1] <= y1)\n                && (lastOrderNumber < numberObjects)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Return and print in JS console the array of the list of ordered objects\n     * @returns {Array}\n     */\n    getListObjectsOrdered() {\n        console.log(JSON.stringify(this._listObjectsOrdered));\n        return this._listObjectsOrdered;\n    }\n\n}\n\nOrderCanvasExercise.exports = OrderCanvasExercise;\n"]}