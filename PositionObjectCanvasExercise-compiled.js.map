{"version":3,"sources":["PositionObjectCanvasExercise.js"],"names":[],"mappings":"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","file":"PositionObjectCanvasExercise-compiled.js","sourcesContent":["/**\n * Project: wice.js.\n * Author: Yulio Aleman Jimenez [@yulioaj290]\n * Date: 4/09/18\n * Created by WebStorm\n */\n\n\n/**\n * PositionObjectCanvasExercise extends from CanvasExercise superclass.\n * Define the position object exercises\n */\nclass PositionObjectCanvasExercise extends CanvasExercise {\n\n    /**\n     * Constructor of the PositionObjectCanvasExercise class.\n     * @param canvasElementId\n     * @param canvasWidth\n     * @param imageSrc\n     * @param lineWidth\n     * @param lineColor\n     * @param lineHead\n     * @param fontFamily\n     * @param fontSize\n     * @param fontColor\n     * @param fontStyle\n     * @param fontAlign\n     * @param fontBaseline\n     * @param mark\n     * @param orderType\n     * @param listObjectsCoords\n     * @param strokeRectObject\n     */\n    constructor(canvasElementId, canvasWidth = '', imageSrc = '',\n                lineWidth = '2', lineColor = '#000000', lineHead = false, fontFamily = 'Arial',\n                fontSize = '20', fontColor = '#000000', fontStyle = 'regular', fontAlign = 'center',\n                fontBaseline = 'middle', mark = 'X', orderType = ORDER_TYPE_NUM,\n                // Below are specific class parameters\n                listObjectsCoords = [], strokeRectObject = true,) {\n\n        super(canvasElementId, canvasWidth, imageSrc, lineWidth, lineColor, lineHead, fontFamily,\n            fontSize, fontColor, fontStyle, fontAlign, fontBaseline, mark, orderType);\n\n        // own properties of the class\n        this._listObjectsCoords = listObjectsCoords;    // array of objects coordinates in the image\n        this._listObjectsPositioned = [];               // array to store the array of objects coordinates positioned by user\n        this._strokeRectObject = strokeRectObject;      // define if object will be put into a rectangle\n        this._numberObjectsPositioned = 0;\n\n        // binding click event to canvas element to allow the position object exercise execution\n        this._canvasElement.addEventListener(\"click\", this.clickAction.bind(this), false);\n    }\n\n    /**\n     * Assign a position based on click event over canvas element.\n     * This function uses the coordinates of the objects inside canvas element and the coordinates of the click event.\n     * @param event\n     * @returns {*}\n     */\n    clickAction(event) {\n\n        // Obtain mouse click position\n        let current_x = event.pageX - event.currentTarget.offsetLeft,\n            current_y = event.pageY - event.currentTarget.offsetTop;\n        // alert(`cursorX: ${cur_x}, cursorY: ${cur_y}`);\n\n        if (this._canvasElement.getContext) {\n            // getting 2d context from canvas element\n            let ctx = this._canvasElement.getContext(\"2d\");\n\n            // asking if there is elements to be positioned\n            if (this._numberObjectsPositioned < this._listObjectsCoords.length) {\n\n                // declaring variables\n                let x, y, x1, y1, op;\n\n                // init text properties\n                ctx.font = `${this._fontStyle} ${this._fontSize}  ${this._fontFamily}`;\n                ctx.fillStyle = this._fontColor;\n                ctx.textAlign = this._fontAlign;\n                ctx.textBaseline = this._fontBaseline;\n\n                // fill mark or letter\n                ctx.fillText(this._mark, current_x, current_y);\n\n                // decrement number of objects to be positioned\n                this._numberObjectsPositioned++;\n\n                // looping the list of objects coordinates\n                for (let i = 0; i < this._listObjectsCoords.length; i++) {\n\n                    // Coordinates of the images\n                    // The canvas divisor allow to calc the exact position of every coordinate,\n                    // even if the canvas element is positioned anywhere inside the web page\n                    x = Math.round(this._listObjectsCoords[i][0] / this._canvasDivisor);\n                    y = Math.round(this._listObjectsCoords[i][1] / this._canvasDivisor);\n                    x1 = Math.round(this._listObjectsCoords[i][2] / this._canvasDivisor);\n                    y1 = Math.round(this._listObjectsCoords[i][3] / this._canvasDivisor);\n\n                    // alert(x + \" <= \" + cur_x + \" - \" + cur_x + \" <= \" + x1 + \" --- \" + y + \" <= \" + cur_y + \" - \" + cur_y + \" <= \" + y1);\n\n                    // loop control variable\n                    op = false;\n\n                    // asking if a valid object was clicked, based on coordinates of objects and click event\n                    if ((x <= current_x && current_x <= x1)\n                        && (y <= current_y && current_y <= y1)) {\n\n                        // fill rectangle\n                        if (this._strokeRectObject) {\n                            ctx.lineWidth = this._lineWidth;\n                            ctx.strokeStyle = this._lineColor;\n                            ctx.strokeRect(x, y, x1 - x, y1 - y);\n                        }\n\n                        // update list of positioned objects\n                        this._listObjectsPositioned[this._listObjectsPositioned.length] = this._listObjectsCoords[i];\n\n                        op = true;\n                    }\n\n                    if (op) {\n                        break;\n                    }\n                }\n                return this.getListObjectsPositioned();\n            }\n        }\n    }\n\n    /**\n     * Return and print in JS console the array of the list of positioned objects\n     * @returns {Array}\n     */\n    getListObjectsPositioned() {\n        console.log(JSON.stringify(this._listObjectsPositioned));\n        return this._listObjectsPositioned;\n    }\n}\n\nPositionObjectCanvasExercise.exports = PositionObjectCanvasExercise;\n\n\n// Live execution of code\nlet coords = [[80, 35, 375, 283], [395, 120, 715, 370], [36, 352, 88, 404], [520, 20, 590, 76]];\n\nconst ex = new PositionObjectCanvasExercise('myCanvas');\nex._listObjectsCoords = coords;\nex._canvasWidth = 700;\nex._imageSrc = 'plasma-desktop.jpg';\nex.initializeCanvas();\n\nlet marks = [];\n\nfor (let i = 0; i < coords.length; i++) {\n    marks[i] = ex.getMark();\n}\n\ndocument.getElementById(\"options\").innerText = JSON.stringify(marks);\n\nex._canvasElement.addEventListener(\"click\", function () {\n    marks.shift();\n    document.getElementById(\"options\").innerText = JSON.stringify(marks);\n    document.getElementById(\"result\").innerText = JSON.stringify(ex.getListObjectsPositioned());\n}, false);\n\nconsole.log(ex);"]}